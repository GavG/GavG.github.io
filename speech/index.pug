//output: index.html
doctype html
html
  head
    style.
      html, body{
      height: 100%;
      }
  body
    button(id='start') start
    button(id='stop') stop
    #output Output
    script.

      var output = document.getElementById('output');

      if (!('webkitSpeechRecognition' in window)) {
        log('speech API not supported');
      } else { //Let’s do some cool stuff :)

        log('speech API supported');

        var recognition = new webkitSpeechRecognition(); //That is the object that will manage our whole recognition process.

        var start = document.getElementById('start');
        var stop = document.getElementById('stop');

        function log(message){
          output.innerHTML = output.innerHTML + '<br>' + message;
        }

        start.addEventListener('click', function(event){
          log('start clicked');
          recognition.start();
        });

        stop.addEventListener('click', function(){
          log('stop clicked');
          recognition.stop();
        });

        recognition.continuous = true;   //Suitable for dictation. 
        recognition.interimResults = true;  //If we want to start receiving results even if they are not final.
        //Define some more additional parameters for the recognition:
        recognition.lang = "en-US"; 
        recognition.maxAlternatives = 1; //Since from our experience, the highest result is really the best...

        recognition.onstart = function() {
          log('listening');
        };

        recognition.onend = function() {
          log('stopped');
        };

        recognition.onspeechstart = function() {
          log('speech started');
        };  

        recognition.onspeechend = function() {
          log('speech stopped');
        };

        recognition.onnomatch = function(event) {
          log('no matched');
        };

        recognition.onresult = function(event) { //the event holds the results
        log('results acquired');
        //Yay – we have results! Let’s check if they are defined and if final or not:
          if (typeof(event.results) === 'undefined') { //Something is wrong…
            recognition.stop();
            return;
            }

            for (var i = event.resultIndex; i < event.results.length; ++i) {      
              if (event.results[i].isFinal) { //Final results
                log("final results: " + event.results[i][0].transcript);   //Of course – here is the place to do useful things with the results.
                console.log(event.results[i][0]);
                console.log(event.results[i]);
              } else {   //i.e. interim...
                //log("interim results: " + event.results[i][0].transcript);  //You can use these results to give the user near real time experience.
              } 
            } //end for loop
          }
      }
